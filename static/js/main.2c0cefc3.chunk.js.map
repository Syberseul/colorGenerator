{"version":3,"sources":["App.js","index.js"],"names":["App","useState","colorImg","setColorImg","orderedColorImg","setOrderedColorImg","showColorImg","setShowColorImg","showOrderedColorImg","setShowOrderedColorImg","useEffect","className","generateColor","map","color","idx","style","backgroundColor","colors","useCallback","colorArr","red","length","green","blue","randomNumber","Math","floor","random","splice","push","handleRandomButton","handleOrderedButton","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAqIeA,MA/Hf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAsDN,oBAAS,GAA/D,mBAAOO,EAAP,KAA4BC,EAA5B,KAEAC,qBAAU,WACRP,EACE,qBAAKQ,UAAU,WAAf,SACGC,IAAgB,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACtB,qBACEJ,UAAU,aACVK,MAAO,CACLC,gBAAgB,OAAD,OAASH,EAAT,OAEZC,SAKbV,EACE,qBAAKM,UAAU,WAAf,SACGC,IAAgB,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACtB,qBACEJ,UAAU,aACVK,MAAO,CACLC,gBAAgB,OAAD,OAASH,EAAT,OAEZC,WAKZ,IAEH,IAAMG,EAAS,CACb,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACxE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG7DN,EAAgBO,uBAAY,WAEhC,IADA,IAAMC,EAAW,CAAC,GAAI,IACbC,EAAM,EAAGA,EAAMH,EAAOI,OAAQD,IACrC,IAAK,IAAIE,EAAQ,EAAGA,EAAQL,EAAOI,OAAQC,IACzC,IAAK,IAAIC,EAAO,EAAGA,EAAON,EAAOI,OAAQE,IAAQ,CAC/C,IAAMV,EAAK,UAAMI,EAAOG,GAAb,aAAsBH,EAAOK,GAA7B,aAAwCL,EAAOM,IAC1D,GAAIJ,EAAS,GAAGE,OAAS,EAAG,CAC1B,IAAMG,EAAeC,KAAKC,MAAMD,KAAKE,SAAWR,EAAS,GAAGE,QAC5DF,EAAS,GAAGS,OAAOJ,EAAc,EAAGX,QAEpCM,EAAS,GAAGU,KAAKhB,GAEnBM,EAAS,GAAGU,KAAKhB,GAIvB,OAAOM,IACN,IA8BGW,EAAqBZ,uBAAY,WACrCZ,GAAiBD,GACbE,GAAqBC,GAAwBD,KAChD,CAACF,EAAcE,IAEZwB,EAAsBb,uBAAY,WACtCV,GAAwBD,GACpBF,GAAcC,GAAiBD,KAClC,CAACA,EAAcE,IAElB,OACE,sBAAKG,UAAU,MAAf,UAEE,sBAAKA,UAAU,mBAAf,UACE,wBAAQsB,QAAS,kBAAMF,KAAvB,SACGzB,EAAe,aAAe,0BAGjC,wBAAQ2B,QAAS,kBAAMD,KAAvB,SACGxB,EAAsB,aAAe,8BAIzCF,EACC,mCAAGJ,IACDM,EACF,mCAAGJ,IAEH,qBAAKO,UAAU,mBAAf,gDCpHRuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2c0cefc3.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\n// import Canvas from \"./Components/Canvas\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [colorImg, setColorImg] = useState(``);\n  const [orderedColorImg, setOrderedColorImg] = useState(``);\n  const [showColorImg, setShowColorImg] = useState(false);\n  const [showOrderedColorImg, setShowOrderedColorImg] = useState(false);\n\n  useEffect(() => {\n    setColorImg(\n      <div className=\"colorImg\">\n        {generateColor()[0].map((color, idx) => (\n          <div\n            className=\"colorPixel\"\n            style={{\n              backgroundColor: `rgb(${color})`,\n            }}\n            key={idx}\n          ></div>\n        ))}\n      </div>\n    );\n    setOrderedColorImg(\n      <div className=\"colorImg\">\n        {generateColor()[1].map((color, idx) => (\n          <div\n            className=\"colorPixel\"\n            style={{\n              backgroundColor: `rgb(${color})`,\n            }}\n            key={idx}\n          ></div>\n        ))}\n      </div>\n    );\n  }, []);\n\n  const colors = [\n    8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144,\n    152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256,\n  ];\n\n  const generateColor = useCallback(() => {\n    const colorArr = [[], []];\n    for (let red = 0; red < colors.length; red++) {\n      for (let green = 0; green < colors.length; green++) {\n        for (let blue = 0; blue < colors.length; blue++) {\n          const color = `${colors[red]}, ${colors[green]}, ${colors[blue]}`;\n          if (colorArr[0].length > 0) {\n            const randomNumber = Math.floor(Math.random() * colorArr[0].length);\n            colorArr[0].splice(randomNumber, 0, color);\n          } else {\n            colorArr[0].push(color);\n          }\n          colorArr[1].push(color);\n        }\n      }\n    }\n    return colorArr;\n  }, []);\n\n  // const colorArr = generateColor();\n\n  // const getColor = () => {\n  //   const idx = Math.floor(Math.random() * colorArr.length);\n  //   const color = colorArr[idx];\n  //   colorArr.splice(idx, 1);\n  //   return color;\n  // };\n\n  // const draw = (ctx) => {\n  //   const { width, height } = ctx.canvas;\n\n  //   ctx.clearRect(0, 0, width, height);\n  //   // ctx.fillStyle = `rgb(${getColor()})`;\n  //   ctx.fillStyle = \"#fff\";\n  //   ctx.fillRect(0, 0, width, height);\n  //   var path = new Path2D();\n  //   path.arc(75, 75, 50, 0, Math.PI * 2, true);\n  //   path.moveTo(110, 75);\n  //   path.arc(75, 75, 35, 0, Math.PI, false);\n  //   path.moveTo(65, 65);\n  //   path.arc(60, 65, 5, 0, Math.PI * 2, true);\n  //   path.moveTo(95, 65);\n  //   path.arc(90, 65, 5, 0, Math.PI * 2, true);\n  //   ctx.strokeStyle = \"#00ffff\";\n  //   ctx.stroke(path);\n  // };\n\n  const handleRandomButton = useCallback(() => {\n    setShowColorImg(!showColorImg);\n    if (showOrderedColorImg) setShowOrderedColorImg(!showOrderedColorImg);\n  }, [showColorImg, showOrderedColorImg]);\n\n  const handleOrderedButton = useCallback(() => {\n    setShowOrderedColorImg(!showOrderedColorImg);\n    if (showColorImg) setShowColorImg(!showColorImg);\n  }, [showColorImg, showOrderedColorImg]);\n\n  return (\n    <div className=\"App\">\n      {/* <div style={{ display: \"flex\", flexDirection: \"row\" }}> */}\n      <div className=\"button-container\">\n        <button onClick={() => handleRandomButton()}>\n          {showColorImg ? \"Hide Image\" : \"Generate Random Image\"}\n        </button>\n\n        <button onClick={() => handleOrderedButton()}>\n          {showOrderedColorImg ? \"Hide Image\" : \"Generate Ordered Image\"}\n        </button>\n      </div>\n\n      {showColorImg ? (\n        <>{colorImg}</>\n      ) : showOrderedColorImg ? (\n        <>{orderedColorImg}</>\n      ) : (\n        <div className=\"colorImg unclick\">Click button to generate image</div>\n      )}\n\n      {/* </div> */}\n\n      {/* <div>\n        <Canvas draw={draw} className=\"canvas\" />\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}