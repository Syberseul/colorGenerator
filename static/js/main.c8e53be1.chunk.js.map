{"version":3,"sources":["App.js","index.js"],"names":["App","useState","colorImg","setColorImg","showColorImg","setShowColorImg","colors","generateColor","colorArr","red","length","green","blue","push","className","onClick","map","color","idx","style","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA0DeA,MAtDf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAS,CACb,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACxE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG7DC,EAAgB,WAEpB,IADA,IAAMC,EAAW,GACRC,EAAM,EAAGA,EAAMH,EAAOI,OAAQD,IACrC,IAAK,IAAIE,EAAQ,EAAGA,EAAQL,EAAOI,OAAQC,IACzC,IAAK,IAAIC,EAAO,EAAGA,EAAON,EAAOI,OAAQE,IACvCJ,EAASK,KAAT,UAAiBP,EAAOG,GAAxB,aAAiCH,EAAOK,GAAxC,aAAmDL,EAAOM,KAIhE,OAAOJ,GAuBT,OACE,sBAAKM,UAAU,MAAf,UACE,wBAAQC,QAtBZ,WACEV,GAAiBD,GAEL,KAARF,GACFC,EACE,qBAAKW,UAAU,WAAf,SACGP,IAAgBS,KAAI,SAACC,EAAOC,GAAR,OACnB,qBACEJ,UAAU,aACVK,MAAO,CACLC,gBAAgB,OAAD,OAASH,EAAT,OAEZC,UAUb,mCAEkB,IAAjBd,EACC,mCAAGF,IAEH,qBAAKY,UAAU,mBAAf,iDC/CRO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c8e53be1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [colorImg, setColorImg] = useState(``);\n  const [showColorImg, setShowColorImg] = useState(false);\n\n  const colors = [\n    8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144,\n    152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256,\n  ];\n\n  const generateColor = () => {\n    const colorArr = [];\n    for (let red = 0; red < colors.length; red++) {\n      for (let green = 0; green < colors.length; green++) {\n        for (let blue = 0; blue < colors.length; blue++) {\n          colorArr.push(`${colors[red]}, ${colors[green]}, ${colors[blue]}`);\n        }\n      }\n    }\n    return colorArr;\n  };\n\n  function toggleShowImg() {\n    setShowColorImg(!showColorImg);\n\n    if (colorImg === ``) {\n      setColorImg(\n        <div className=\"colorImg\">\n          {generateColor().map((color, idx) => (\n            <div\n              className=\"colorPixel\"\n              style={{\n                backgroundColor: `rgb(${color})`,\n              }}\n              key={idx}\n            ></div>\n          ))}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={toggleShowImg}>Generate color image</button>\n\n      {showColorImg === true ? (\n        <>{colorImg}</>\n      ) : (\n        <div className=\"colorImg unclick\"> Click button to generate image</div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}